services:
  web:
    build: .
    container_name: fastapi_app
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000
    env_file:
      - .env
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 5s
      timeout: 3s
      retries: 5
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    extra_hosts:
      - "host.docker.internal:host-gateway"

  migrations:
    build: .
    container_name: migrations_runner
    command: alembic upgrade head
    env_file:
      - .env
    volumes:
      - .:/app
    extra_hosts:
      - "host.docker.internal:host-gateway"

  celery_worker:
    build: .
    container_name: celery_worker
    command: celery --app=src.tasks.beat:app worker -l INFO --purge --pool=solo
    env_file:
      - .env
    depends_on:
      - web
      - redis
    volumes:
      - .:/app

  flower:
    build: .
    container_name: flower
    command: celery --app=src.tasks.tasks:app flower --port=5555
    env_file:
      - .env
    depends_on:
      - web
      - redis
    ports:
      - "5555:5555"
    volumes:
      - .:/app

  celery_beat:
    build: .
    container_name: celery_beat
    command: celery --app=src.tasks.beat:app beat -l INFO
    env_file:
      - .env
    depends_on:
      - web
      - redis
    volumes:
      - .:/app

  redis:
    image: redis:7.2
    container_name: redis
    ports:
      - "6379:6379"

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data: